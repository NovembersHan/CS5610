{"ast":null,"code":"// const initialState = {\n//     lessons: []\n// }\n//\n// const lessonReducer = (state=initialState, action) => {\n//     switch (action.type) {\n//         case \"CREATE_LESSON\":\n//             return {\n//                 ...state,\n//                 lessons: [\n//                     ...state.lessons,\n//                     action.lesson\n//                 ]\n//             }\n//         case \"FIND_LESSONS\":\n//             return {\n//                 ...state,\n//                 lessons: action.lessons\n//             }\n//         case \"DELETE_MODULE\":\n//             return {\n//                 lessons: state.lessons.filter(lesson => {\n//                     if(lesson._id === action.lessonToDelete._id) {\n//                         return false\n//                     } else {\n//                         return true\n//                     }\n//                 })\n//             }\n//         case \"UPDATE_MODULE\":\n//             return {\n//                 lessons: state.lessons.map(lesson => {\n//                     if(lesson._id === action.lesson._id) {\n//                         return action.lesson\n//                     } else {\n//                         return lesson\n//                     }\n//                 })\n//             }\n//         default:\n//             return state\n//     }\n// }\n//\n// export default lessonReducer\nconst initialState = {\n  lessons: []\n};\n\nconst lessonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FIND_LESSONS_FOR_MODULE\":\n      return { ...state,\n        lessons: action.lessons\n      };\n\n    case \"CREATE_LESSON\":\n      const newState = {\n        lessons: [...state.lessons, action.lesson]\n      };\n      return newState;\n\n    case \"DELETE_LESSON\":\n      const newState1 = {\n        lessons: state.lessons.filter(lesson => {\n          if (lesson._id === action.lessonToDelete._id) {\n            return false;\n          } else {\n            return true;\n          }\n        })\n      };\n      return newState1;\n\n    case \"UPDATE_LESSON\":\n      return {\n        lessons: state.lessons.map(m => {\n          if (m._id === action.lesson._id) {\n            return action.lesson;\n          } else {\n            return m;\n          }\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default lessonReducer;","map":{"version":3,"sources":["/Users/yafeihan/Documents/CS5610-Web-Development/Projects/cs5610/src/reducers/lesson-reducer.js"],"names":["initialState","lessons","lessonReducer","state","action","type","newState","lesson","newState1","filter","_id","lessonToDelete","map","m"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAAgC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,yBAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAFb,OAAP;;AAIJ,SAAK,eAAL;AACI,YAAMK,QAAQ,GAAG;AACbL,QAAAA,OAAO,EAAE,CACL,GAAGE,KAAK,CAACF,OADJ,EAELG,MAAM,CAACG,MAFF;AADI,OAAjB;AAMA,aAAOD,QAAP;;AACJ,SAAK,eAAL;AACI,YAAME,SAAS,GAAG;AACdP,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcQ,MAAd,CAAqBF,MAAM,IAAI;AACpC,cAAGA,MAAM,CAACG,GAAP,KAAeN,MAAM,CAACO,cAAP,CAAsBD,GAAxC,EAA6C;AACzC,mBAAO,KAAP;AACH,WAFD,MAEO;AACH,mBAAO,IAAP;AACH;AACJ,SANQ;AADK,OAAlB;AASA,aAAOF,SAAP;;AACJ,SAAK,eAAL;AACI,aAAO;AACHP,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcW,GAAd,CAAkBC,CAAC,IAAI;AAC5B,cAAGA,CAAC,CAACH,GAAF,KAAUN,MAAM,CAACG,MAAP,CAAcG,GAA3B,EAAgC;AAC5B,mBAAON,MAAM,CAACG,MAAd;AACH,WAFD,MAEO;AACH,mBAAOM,CAAP;AACH;AACJ,SANQ;AADN,OAAP;;AASJ;AACI,aAAOV,KAAP;AApCR;AAsCH,CAvCD;;AAwCA,eAAeD,aAAf","sourcesContent":["// const initialState = {\n//     lessons: []\n// }\n//\n// const lessonReducer = (state=initialState, action) => {\n//     switch (action.type) {\n//         case \"CREATE_LESSON\":\n//             return {\n//                 ...state,\n//                 lessons: [\n//                     ...state.lessons,\n//                     action.lesson\n//                 ]\n//             }\n//         case \"FIND_LESSONS\":\n//             return {\n//                 ...state,\n//                 lessons: action.lessons\n//             }\n//         case \"DELETE_MODULE\":\n//             return {\n//                 lessons: state.lessons.filter(lesson => {\n//                     if(lesson._id === action.lessonToDelete._id) {\n//                         return false\n//                     } else {\n//                         return true\n//                     }\n//                 })\n//             }\n//         case \"UPDATE_MODULE\":\n//             return {\n//                 lessons: state.lessons.map(lesson => {\n//                     if(lesson._id === action.lesson._id) {\n//                         return action.lesson\n//                     } else {\n//                         return lesson\n//                     }\n//                 })\n//             }\n//         default:\n//             return state\n//     }\n// }\n//\n// export default lessonReducer\n\nconst initialState = {\n    lessons: []\n}\n\nconst lessonReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case \"FIND_LESSONS_FOR_MODULE\":\n            return {\n                ...state,\n                lessons: action.lessons\n            }\n        case \"CREATE_LESSON\":\n            const newState = {\n                lessons: [\n                    ...state.lessons,\n                    action.lesson\n                ]\n            }\n            return newState\n        case \"DELETE_LESSON\":\n            const newState1 = {\n                lessons: state.lessons.filter(lesson => {\n                    if(lesson._id === action.lessonToDelete._id) {\n                        return false\n                    } else {\n                        return true\n                    }\n                })\n            }\n            return newState1\n        case \"UPDATE_LESSON\":\n            return {\n                lessons: state.lessons.map(m => {\n                    if(m._id === action.lesson._id) {\n                        return action.lesson\n                    } else {\n                        return m\n                    }\n                })\n            }\n        default:\n            return state\n    }\n}\nexport default lessonReducer"]},"metadata":{},"sourceType":"module"}